import type { LoadInput } from "@sveltejs/kit";

export const hostedROMs = [
  /// Demo: Maze, by David Winter, 199x
  "MAZE",
  /// Demo: Sierpinski, by Sergey Naydenov, 2010
  "SIERPINSKI",
  /// Test: Keypad, by Hap, 2006
  "KEYPAD",
] as const;
export type HostedROM = typeof hostedROMs[number];

export const fetchHostedROM = async (fetch: LoadInput["fetch"], hostedROM: HostedROM): Promise<Uint8Array | null> => {
  const staticPath = `/chip8/ROMS/${hostedROM}`;
  try {
    const buffer = await fetch(staticPath, { method: "GET" }).then(res => res.arrayBuffer());
    return new Uint8Array(buffer);
  } catch (err) {
    console.error(`Chip8.fetchHostedROM("${hostedROM}") error:`, err);
    return null;
  }
};

// TODO: remove these hardcoded ROMs once I figure out how to work around SvelteKit's "1 context='module' per script only"
export const MAZE_ROM = new Uint8Array([
  162, 30, 194, 1, 50, 1, 162, 26, 208, 20, 112, 4, 48, 64, 18, 0, 96, 0, 113, 4, 49, 32, 18, 0, 18, 24, 128, 64, 32,
  16, 32, 64, 128, 16,
]);
export const SIERPINSKI_ROM = new Uint8Array([
  18, 5, 67, 56, 80, 96, 0, 133, 0, 96, 1, 129, 80, 163, 230, 241, 30, 240, 85, 96, 31, 138, 0, 96, 0, 139, 0, 163, 194,
  240, 101, 163, 194, 218, 177, 96, 1, 163, 195, 240, 85, 96, 31, 164, 6, 240, 85, 96, 1, 163, 196, 240, 85, 163, 195,
  240, 101, 133, 0, 96, 1, 129, 0, 128, 80, 128, 20, 164, 7, 240, 85, 163, 196, 240, 101, 133, 0, 96, 1, 129, 0, 128,
  80, 128, 21, 163, 197, 240, 85, 163, 196, 240, 101, 133, 0, 163, 197, 240, 101, 163, 230, 240, 30, 240, 101, 134, 0,
  163, 196, 240, 101, 135, 0, 96, 1, 129, 0, 128, 112, 128, 20, 163, 230, 240, 30, 240, 101, 129, 0, 128, 96, 128, 19,
  129, 80, 163, 198, 241, 30, 240, 85, 163, 197, 240, 101, 133, 0, 163, 197, 240, 101, 163, 198, 240, 30, 240, 101, 129,
  80, 163, 230, 241, 30, 240, 85, 163, 196, 240, 101, 163, 198, 240, 30, 240, 101, 133, 0, 96, 1, 129, 80, 80, 16, 111,
  1, 63, 0, 18, 249, 163, 196, 240, 101, 133, 0, 96, 31, 129, 0, 128, 80, 128, 20, 138, 0, 163, 195, 240, 101, 139, 0,
  163, 194, 240, 101, 163, 194, 218, 177, 96, 31, 133, 0, 163, 196, 240, 101, 129, 0, 128, 80, 128, 21, 138, 0, 163,
  195, 240, 101, 139, 0, 163, 194, 240, 101, 163, 194, 218, 177, 163, 196, 240, 101, 133, 0, 164, 7, 240, 101, 129, 0,
  128, 80, 130, 16, 129, 5, 129, 32, 144, 16, 111, 0, 63, 1, 19, 33, 163, 196, 240, 101, 112, 1, 163, 196, 240, 85, 18,
  71, 163, 195, 240, 101, 133, 0, 164, 6, 240, 101, 129, 0, 128, 80, 130, 16, 129, 5, 129, 32, 144, 16, 111, 0, 63, 1,
  19, 73, 163, 195, 240, 101, 112, 1, 163, 195, 240, 85, 18, 47, 19, 73, 129, 0, 164, 8, 98, 1, 142, 37, 254, 30, 240,
  101, 0, 238, 98, 1, 99, 0, 131, 4, 129, 37, 49, 0, 19, 93, 128, 48, 0, 238, 164, 8, 254, 30, 246, 85, 102, 0, 130, 0,
  130, 21, 63, 1, 19, 149, 131, 0, 131, 6, 132, 16, 101, 1, 130, 48, 130, 69, 63, 1, 19, 143, 132, 14, 133, 14, 19, 129,
  128, 69, 134, 84, 19, 113, 245, 101, 128, 96, 0, 238, 130, 0, 128, 21, 63, 0, 19, 155, 128, 32, 0, 238, 163, 191, 240,
  51, 242, 101, 240, 41, 211, 69, 115, 6, 241, 41, 211, 69, 115, 6, 242, 41, 211, 69, 0, 238, 40, 99, 41, 128, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
]);
export const KEYPAD_ROM = new Uint8Array([
  18, 78, 8, 25, 1, 1, 8, 1, 15, 1, 1, 9, 8, 9, 15, 9, 1, 17, 8, 17, 15, 17, 1, 25, 15, 25, 22, 1, 22, 9, 22, 17, 22,
  25, 252, 252, 252, 252, 252, 252, 252, 0, 162, 2, 130, 14, 242, 30, 130, 6, 241, 101, 0, 238, 162, 2, 130, 14, 242,
  30, 130, 6, 241, 85, 0, 238, 111, 16, 255, 21, 255, 7, 63, 0, 18, 70, 0, 238, 0, 224, 98, 0, 34, 42, 242, 41, 208, 21,
  112, 255, 113, 255, 34, 54, 114, 1, 50, 16, 18, 82, 242, 10, 34, 42, 162, 34, 208, 23, 34, 66, 208, 23, 18, 100,
]);
